defmodule AocTest do
  use ExUnit.Case
  doctest Aoc

  test "snail functions" do
    text = "[[[[[4,3],4],4],[7,[[8,4],9]]],[1,1]]"
    s = Snail.parse(text)
    i = Snail.all_coords(s, [])
    d = Enum.map(i, &Snail.find(s, &1))
    assert s == Snail.reconstruct(i, d)

    assert Snail.explode(s) == {{{{0, 7}, 4}, {7, {{8, 4}, 9}}}, {1, 1}}

    assert Snail.reduce(s) == {{{{0,7},4},{{7,8},{6,0}}},{8,1}}
  end

  test "part1" do
    text = "[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]"
    t = Aoc.parse(text)
    assert Aoc.part1(t) == 4140
  end

  test "part2" do
    text = "[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]"
    t = Aoc.parse(text)
    assert Aoc.part2(t) == 3993
  end
end
